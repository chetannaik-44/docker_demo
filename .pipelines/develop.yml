trigger:
  branches:
    include:  
      - main

variables:
  - group: default_credentials
  - name: dockerRegistry
    value: 'docker.io/chetannaik44'
  - name: dockerImageName
    value: 'demo'
  - name: dockerImageTag
    value: '$(Build.BuildId)'

parameters:
  - name: variable_check
    type: boolean
    displayName: "variablecheck default false"
    default: false
  - name: version
    type: string
    displayName: "image version"
    default: "1.0.0"

stages:
  - template: templates/stages/versioncheck.yml
  - ${{ if eq(parameters.variable_check, true) }}:
    - template: templates/stages/variablecheck.yml
  - stage: BuildAndPush
    displayName: Build and Push Docker Image
    jobs:
      - job: Build
        displayName: Build Job
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              echo "$(DOCKER_PASSWORD)" | docker login $(dockerRegistry) --username "$(DOCKER_USERNAME)" --password-stdin
            displayName: 'Docker Login'
            env:
              DOCKER_USERNAME: $(DOCKER_USERNAME)
              DOCKER_PASSWORD: $(DOCKER_PASSWORD)

          - script: |
              docker build -t $(dockerRegistry)/$(dockerImageName):$(dockerImageTag) .
            displayName: 'Docker Build'

          - script: |
              docker run --rm $(dockerRegistry)/$(dockerImageName):$(dockerImageTag) echo "Running container test..."
            displayName: 'Docker Test'

          - script: |
              docker push $(dockerRegistry)/$(dockerImageName):$(dockerImageTag)
            displayName: 'Docker Push'

          - script: |
              docker rmi $(dockerRegistry)/$(dockerImageName):$(dockerImageTag)
              docker system prune -f
            displayName: 'Docker Cleanup'

